// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}
 
model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  email         String    @unique
  password      String
  createdAt     DateTime  @default(now())
  chats         Chat[]    @relation("UserChats")       // all chats the user is part of
  messages      Message[]
  createdGroups Chat[]    @relation("Creator")        // groups this user created
}

model Chat {
  id        Int       @id @default(autoincrement())
  type      String    // 'private' | 'group'
  name      String?   // group name
  users     User[]    @relation("UserChats")          // implicit many-to-many, no references
  messages  Message[]
  creator   User?     @relation("Creator", fields: [creatorId], references: [id])
  creatorId Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  Int
  content   String
  createdAt DateTime @default(now())
}
